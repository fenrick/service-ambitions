[project]
name = "service-ambitions"
version = "0.1.0"
description = "Command-line tool for generating service ambitions using a chat model."
readme = "README.md"
authors = [
    { name = "Jolyon Suthers", email = "201621+fenrick@users.noreply.github.com" }
]
requires-python = ">=3.11,<4.0"
dependencies = [
    "openai",
    "pydantic-ai",
    "logfire[system-metrics] (>=4.3.3,<5.0.0)",
    "pydantic",
    "pydantic-settings",
    "tqdm",
    "types-tqdm (>=4.67.0.20250809,<5.0.0.0)",
    "scikit-learn",
    "scipy-stubs (>=1.16.1.0,<2.0.0.0)",
    "tiktoken (>=0.11.0,<0.12.0)",
    "opentelemetry-instrumentation-botocore (>=0.57b0,<0.58)",
    "opentelemetry-instrumentation-httpx (>=0.57b0,<0.58)",
    "opentelemetry-instrumentation-requests (>=0.57b0,<0.58)",
    "opentelemetry-instrumentation-sqlite3 (>=0.57b0,<0.58)",
    "opentelemetry-instrumentation-starlette (>=0.57b0,<0.58)",
    "opentelemetry-instrumentation-urllib (>=0.57b0,<0.58)",
]

[project.scripts]
service-ambitions = "cli:main"

[tool.poetry.group.dev.dependencies]
black = "*"
ruff = "*"
mypy = "*"
pydantic = "*"
bandit = "*"
pre-commit = "*"
"pip-audit" = "*"
pytest = "*"
pytest-xdist = "*"
hypothesis = "*"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
package-mode = false

[tool.black]
line-length = 88
target-version = ["py313"]

[tool.ruff]
line-length = 88
target-version = "py313"
src = ["src", "tests"]

[tool.ruff.lint]
select = ["E", "F", "I", "B"]

[tool.mypy]
plugins = ["pydantic.mypy"]
warn_redundant_casts = true
disallow_any_generics = true
warn_unused_ignores = true
files = ["src"]

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]

[tool.bandit]
targets = ["src"]
