[project]
name = "service-ambitions"
version = "0.1.0"
description = "Command-line tool for generating service evolutions using a chat model."
readme = "README.md"
authors = [
    { name = "Jolyon Suthers", email = "201621+fenrick@users.noreply.github.com" }
]
requires-python = ">=3.11,<4.0"
dependencies = [
    "openai (>=1.100)",
    "pydantic-ai (>=1)",
    "logfire[system-metrics] (>=4.3.3,<5.0.0)",
    "pydantic (>=2.11)",
    "pydantic-settings (>=2.10)",
    "tqdm",
    "pyyaml (>=6.0.2,<7.0.0)",
]

[project.scripts]
service-ambitions = "cli:main"

[tool.poetry.group.dev.dependencies]
black = "*"
ruff = "*"
mypy = "*"
pydantic = "*"
bandit = "*"
pre-commit = "*"
"pip-audit" = "*"
safety = "*"
pytest = "*"
pytest-xdist = "*"
pytest-cov = "*"
hypothesis = "*"
types-pyyaml = "^6.0.12.20250822"
pytest-asyncio = "^1.1.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "*"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
# Enable package mode so `poetry build` can create a distributable.
package-mode = true
# Include all modules from the `src` directory.
packages = [
  { include = "cli", from = "src" },
  { include = "core", from = "src" },
  { include = "engine", from = "src" },
  { include = "generation", from = "src" },
  { include = "io_utils", from = "src" },
  { include = "migrations", from = "src" },
  { include = "models", from = "src" },
  { include = "observability", from = "src" },
  { include = "runtime", from = "src" },
  { include = "utils", from = "src" }
]

[tool.black]
line-length = 88
target-version = ["py311"]
extend-exclude = '\.idea'

[tool.ruff]
line-length = 88
target-version = "py311"
src = ["src", "tests"]
extend-exclude = [".idea"]

[tool.ruff.lint]
select = ["E", "F", "I", "B", "C901"]

[tool.ruff.lint.mccabe]
max-complexity = 8

[tool.mypy]
plugins = ["pydantic.mypy"]
warn_redundant_casts = true
disallow_any_generics = true
warn_unused_ignores = true
files = ["src"]

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]

[tool.bandit]
targets = ["src"]
